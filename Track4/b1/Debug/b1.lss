
b1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000026e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001fa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000026e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000026e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000002dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000863  00000000  00000000  00000304  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007a8  00000000  00000000  00000b67  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000025b  00000000  00000000  0000130f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000007c  00000000  00000000  0000156c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000041c  00000000  00000000  000015e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000111  00000000  00000000  00001a04  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001b15  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2c c0       	rjmp	.+88     	; 0xae <__vector_21>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a2 30       	cpi	r26, 0x02	; 2
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	36 d0       	rcall	.+108    	; 0x116 <main>
  aa:	a5 c0       	rjmp	.+330    	; 0x1f6 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <__vector_21>:

/* Measured voltage (mV) */
u_int16 v = 0x0000;

ISR(ADC_vect)
{
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	0b b6       	in	r0, 0x3b	; 59
  ba:	0f 92       	push	r0
  bc:	2f 93       	push	r18
  be:	3f 93       	push	r19
  c0:	4f 93       	push	r20
  c2:	5f 93       	push	r21
  c4:	6f 93       	push	r22
  c6:	7f 93       	push	r23
  c8:	8f 93       	push	r24
  ca:	9f 93       	push	r25
  cc:	af 93       	push	r26
  ce:	bf 93       	push	r27
  d0:	ef 93       	push	r30
  d2:	ff 93       	push	r31
	u_int32 result = ADC;
  d4:	24 b1       	in	r18, 0x04	; 4
  d6:	35 b1       	in	r19, 0x05	; 5
	result *= Vref;
  d8:	a0 e0       	ldi	r26, 0x00	; 0
  da:	b4 e1       	ldi	r27, 0x14	; 20
  dc:	7d d0       	rcall	.+250    	; 0x1d8 <__umulhisi3>
	result /= 1023;
	v = result;
  de:	2f ef       	ldi	r18, 0xFF	; 255
  e0:	33 e0       	ldi	r19, 0x03	; 3
  e2:	40 e0       	ldi	r20, 0x00	; 0
  e4:	50 e0       	ldi	r21, 0x00	; 0
  e6:	56 d0       	rcall	.+172    	; 0x194 <__udivmodsi4>
  e8:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <_edata+0x1>
  ec:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <_edata>
}
  f0:	ff 91       	pop	r31
  f2:	ef 91       	pop	r30
  f4:	bf 91       	pop	r27
  f6:	af 91       	pop	r26
  f8:	9f 91       	pop	r25
  fa:	8f 91       	pop	r24
  fc:	7f 91       	pop	r23
  fe:	6f 91       	pop	r22
 100:	5f 91       	pop	r21
 102:	4f 91       	pop	r20
 104:	3f 91       	pop	r19
 106:	2f 91       	pop	r18
 108:	0f 90       	pop	r0
 10a:	0b be       	out	0x3b, r0	; 59
 10c:	0f 90       	pop	r0
 10e:	0f be       	out	0x3f, r0	; 63
 110:	0f 90       	pop	r0
 112:	1f 90       	pop	r1
 114:	18 95       	reti

00000116 <main>:

int main(void)
{
	DDRA = 0xFF, DDRB = 0xFF;
 116:	8f ef       	ldi	r24, 0xFF	; 255
 118:	8a bb       	out	0x1a, r24	; 26
 11a:	87 bb       	out	0x17, r24	; 23
	DDRF &= ~0x02;	// PF1(ADC1) Read
 11c:	e1 e6       	ldi	r30, 0x61	; 97
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	8d 7f       	andi	r24, 0xFD	; 253
 124:	80 83       	st	Z, r24
	
	ADMUX = 0x01;
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0xEE;
 12a:	8e ee       	ldi	r24, 0xEE	; 238
 12c:	86 b9       	out	0x06, r24	; 6
	
	sei();
 12e:	78 94       	sei
	
	while (1){
		PORTA = PORTB = (0xFF << (8 - v * 8 / Vref));
 130:	c0 e0       	ldi	r28, 0x00	; 0
 132:	d4 e1       	ldi	r29, 0x14	; 20
 134:	e8 e0       	ldi	r30, 0x08	; 8
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	2f ef       	ldi	r18, 0xFF	; 255
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 140:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	88 0f       	add	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	be 01       	movw	r22, r28
 152:	0c d0       	rcall	.+24     	; 0x16c <__udivmodhi4>
 154:	cf 01       	movw	r24, r30
 156:	86 1b       	sub	r24, r22
 158:	97 0b       	sbc	r25, r23
 15a:	a9 01       	movw	r20, r18
 15c:	02 c0       	rjmp	.+4      	; 0x162 <main+0x4c>
 15e:	44 0f       	add	r20, r20
 160:	55 1f       	adc	r21, r21
 162:	8a 95       	dec	r24
 164:	e2 f7       	brpl	.-8      	; 0x15e <main+0x48>
 166:	48 bb       	out	0x18, r20	; 24
 168:	4b bb       	out	0x1b, r20	; 27
 16a:	e8 cf       	rjmp	.-48     	; 0x13c <main+0x26>

0000016c <__udivmodhi4>:
 16c:	aa 1b       	sub	r26, r26
 16e:	bb 1b       	sub	r27, r27
 170:	51 e1       	ldi	r21, 0x11	; 17
 172:	07 c0       	rjmp	.+14     	; 0x182 <__udivmodhi4_ep>

00000174 <__udivmodhi4_loop>:
 174:	aa 1f       	adc	r26, r26
 176:	bb 1f       	adc	r27, r27
 178:	a6 17       	cp	r26, r22
 17a:	b7 07       	cpc	r27, r23
 17c:	10 f0       	brcs	.+4      	; 0x182 <__udivmodhi4_ep>
 17e:	a6 1b       	sub	r26, r22
 180:	b7 0b       	sbc	r27, r23

00000182 <__udivmodhi4_ep>:
 182:	88 1f       	adc	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	5a 95       	dec	r21
 188:	a9 f7       	brne	.-22     	; 0x174 <__udivmodhi4_loop>
 18a:	80 95       	com	r24
 18c:	90 95       	com	r25
 18e:	bc 01       	movw	r22, r24
 190:	cd 01       	movw	r24, r26
 192:	08 95       	ret

00000194 <__udivmodsi4>:
 194:	a1 e2       	ldi	r26, 0x21	; 33
 196:	1a 2e       	mov	r1, r26
 198:	aa 1b       	sub	r26, r26
 19a:	bb 1b       	sub	r27, r27
 19c:	fd 01       	movw	r30, r26
 19e:	0d c0       	rjmp	.+26     	; 0x1ba <__udivmodsi4_ep>

000001a0 <__udivmodsi4_loop>:
 1a0:	aa 1f       	adc	r26, r26
 1a2:	bb 1f       	adc	r27, r27
 1a4:	ee 1f       	adc	r30, r30
 1a6:	ff 1f       	adc	r31, r31
 1a8:	a2 17       	cp	r26, r18
 1aa:	b3 07       	cpc	r27, r19
 1ac:	e4 07       	cpc	r30, r20
 1ae:	f5 07       	cpc	r31, r21
 1b0:	20 f0       	brcs	.+8      	; 0x1ba <__udivmodsi4_ep>
 1b2:	a2 1b       	sub	r26, r18
 1b4:	b3 0b       	sbc	r27, r19
 1b6:	e4 0b       	sbc	r30, r20
 1b8:	f5 0b       	sbc	r31, r21

000001ba <__udivmodsi4_ep>:
 1ba:	66 1f       	adc	r22, r22
 1bc:	77 1f       	adc	r23, r23
 1be:	88 1f       	adc	r24, r24
 1c0:	99 1f       	adc	r25, r25
 1c2:	1a 94       	dec	r1
 1c4:	69 f7       	brne	.-38     	; 0x1a0 <__udivmodsi4_loop>
 1c6:	60 95       	com	r22
 1c8:	70 95       	com	r23
 1ca:	80 95       	com	r24
 1cc:	90 95       	com	r25
 1ce:	9b 01       	movw	r18, r22
 1d0:	ac 01       	movw	r20, r24
 1d2:	bd 01       	movw	r22, r26
 1d4:	cf 01       	movw	r24, r30
 1d6:	08 95       	ret

000001d8 <__umulhisi3>:
 1d8:	a2 9f       	mul	r26, r18
 1da:	b0 01       	movw	r22, r0
 1dc:	b3 9f       	mul	r27, r19
 1de:	c0 01       	movw	r24, r0
 1e0:	a3 9f       	mul	r26, r19
 1e2:	70 0d       	add	r23, r0
 1e4:	81 1d       	adc	r24, r1
 1e6:	11 24       	eor	r1, r1
 1e8:	91 1d       	adc	r25, r1
 1ea:	b2 9f       	mul	r27, r18
 1ec:	70 0d       	add	r23, r0
 1ee:	81 1d       	adc	r24, r1
 1f0:	11 24       	eor	r1, r1
 1f2:	91 1d       	adc	r25, r1
 1f4:	08 95       	ret

000001f6 <_exit>:
 1f6:	f8 94       	cli

000001f8 <__stop_program>:
 1f8:	ff cf       	rjmp	.-2      	; 0x1f8 <__stop_program>
